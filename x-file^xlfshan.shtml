<HTML> 
  <HEAD>
<!-- Authored by OSEHRA -->
<!-- Revised by Sam Habiel, July 2017 -->
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1"> 
    <TITLE>Kernel APIs: $$FILE^XLFSHAN</TITLE>
    <META NAME="subject" CONTENT="Kernel APIs: $$FILE^XLFSHAN">
    <META NAME="keywords"
	      CONTENT="Infrastructure and Security Services,Information Infrastructure Service,ISS,IIS,VISTA,kernel,programmer,developer,programmer manual,apis,application programming interface,application,programming,interface,entry point,device handler,supported">
    <LINK REL="StyleSheet" TYPE="text/css" HREF="common/programmer.css"> 
  </HEAD> 
  <BODY> 
<!--webbot bot="Include" U-Include="common/banner_api_page-kernel.htm" TAG="BODY" startspan -->
<!--Title Banner (image)-->
    <TABLE BORDER="0"
	       WIDTH="100%"
	       CELLSPACING="0"
	       CELLPADDING="6"
	       SUMMARY="This table is for formatting purposes only"
	       HEIGHT="65"> 
	  <TR> 
	    <TD VALIGN="middle"
	        ALIGN="left"
	        HEIGHT="30"> 
		  <IMG SRC="images/kernel_heading_APIs-new.gif"
			   ALT="Kernel 8.0 APIs Banner"
			   BORDER="0" width="429" height="29">
		  <A HREF="#navskip">
		  <IMG SRC="images/clr_pxl.gif"
			   ALT="[skip navigation]"
			   WIDTH="25"
			   HEIGHT="1"
			   BORDER="0"></A>
		  <BR>
		  <IMG SRC="images/oitbanner.gif"
			   ALT="Office of Information & Technology (OIT) Banner"
			   BORDER="0" width="429" height="30">
	    </TD> 
		<TD ALIGN="right"
		    VALIGN="middle"
		    HEIGHT="30"> 
		  <P></P>
		</TD> 
	  </TR> 
    </TABLE> 
  <!--webbot bot="Include" endspan i-checksum="43655" --><P></P> 
<!-- Content -->
  <H3><A NAME="navskip">$$FILE^XLFSHAN</A>: Returns SHA Hash for Specified FileMan File or Subfile Entry</H3> 
	<P>
  <B>Reference Type:</B> Supported, 
	<B>Category:</B> Data Security,
	<B>Integration Agreement:</B>6157</P> 
	<H4><A NAME="description">Description</A></H4> 
  <p>
	This is one of everal APIs for hashing, encoding/decoding, or encryption/decryption of input of various
	formats are available for developers to work with data security.
	These APIs are supported under Integration Control Registration (ICR) #6189
	This extrinsic function returns the SHA hash for a specified file entry. It
	uses the VA FileMan GETS^DIQ API to extract the data from the file. The input
	parameters match the input parameters for GETS^DIQ.
	</p>
  <blockquote><strong>NOTE:</strong> This API was released with Kernel patch XU*8.0*657.</blockquote>
	<H4><A NAME="format">Format</A></H4> 
	<PRE>$$FILE^XLFSHAN(hashlen,filenum,iens[,field][,flags])</PRE> 
	<H4><A NAME="input_parameters">Input Parameters</A></H4> 
	<TABLE BORDER="1"
	       CELLPADDING="5"
	       BGCOLOR="#F1F2F3"
	       BORDERCOLORLIGHT="#F1F2F3"
	       BORDERCOLORDARK="#808080"
	       WIDTH="100%"> 
	  <TR> 
		<TH VALIGN="TOP" WIDTH="15%">hashlen</TH> 
		<TD VALIGN="TOP" WIDTH="85%">(required) The hash length in bits:
			<UL>
			  <li>160 (SHA-1)</li>
			  <li>224 (SHA-224)</li>
			  <li>256 (SHA-256)</li>
			  <li>384 (SHA-384)</li>
			  <li>512 (SHA-512)</li>
			</UL>
			</TD>
    </TR>
    <TR>
		<TH VALIGN="TOP" WIDTH="15%">filenum</TH> 
		<TD VALIGN="TOP" WIDTH="85%">(required) VA FileMan file or subfile number.</TD> 
    </TR>
    <TR>
		<TH VALIGN="TOP" WIDTH="15%">iens</TH> 
		<TD VALIGN="TOP" WIDTH="85%">(required) Standard VA FileMan IENS indicating internal entry numbers, as documented in the VA FileMan Developerâ€™s Guide.</TD> 
	  </TR> 
    <TR>
			<TH VALIGN="TOP" WIDTH="15%">field</TH> 
			<TD VALIGN="TOP" WIDTH="85%">(optional) Can be one of the following:
				<UL>
					<li>A single field number.</li>
					<li>A list of field numbers, separated by semicolons.</li>
					<li>A range of field numbers, in the form M:N; where M and N are the
					end points of the inclusive range. All field numbers within this range
					are retrieved.</li>
					<li>Asterisk (*) for all fields at the top-level (no sub- Multiple record).</li>
					<li>Double asterisk (**) for all fields including all fields and data in sub-Multiple fields.</li>
					<li>Field number of a multiple followed by an * to indicate all fields and records in the sub-Multiple for that field.</li>
				</UL>
				If this parameter is not passed, it defaults to **, which extracts all fields.
			</TD> 
	  </TR> 
    <TR>
			<TH VALIGN="TOP" WIDTH="15%">flags</TH> 
			<TD VALIGN="TOP" WIDTH="85%">(optional) Flags to control processing. The possible values are:
				<UL>
					<li>E - Returns External values in nodes ending with E.</li>
					<li>I - Returns Internal values in nodes ending with I; otherwise, external is returned.</li>
					<li>N - Does not return Null values.</li>
					<li>R - Resolves field numbers to field names in target array subscripts.</li>
					<li>Z - WORD-PROCESSING fields include Zero nodes.</li>
					<li>A# - Audit Trail is used to retrieve the value of "FIELD" at a
					particular point in time. # is a date/time in VA FileMan internal
					format (e.g., 3021015.08). The values retrieved are the (audited)
					values of the fields as of that date/time.</li>
				</UL>
			</TD> 
	  </TR> 
	</TABLE> 
	<H4><A NAME="output">Output</A></H4> 
	<TABLE BORDER="1"
	       CELLPADDING="5"
	       BGCOLOR="#F1F2F3"
	       BORDERCOLORLIGHT="#F1F2F3"
	       BORDERCOLORDARK="#808080"
	       WIDTH="100%"> 
	  <TR> 
	    <TH VALIGN="TOP" WIDTH="15%">Output</TD> 
      <TD VALIGN="TOP" WIDTH="85%">
				<ul>
					<li>SHA hash if successful.</li>
					<li>Zero (0) - If the file could not be opened or found.</li>
					<li>-1 - If an error occurs.</li>
				</ul>
			</TD>
	  </TR> 
	</TABLE> 
	<P>&nbsp;</P>
  <H4>Example</H4>
  <pre>
<strong>&gt;W $$FILE^XLFSHAN(512,200,"10000000407,")</strong>
8FE96A435D69989EFC30FC852260990BECB030247657B9CA1CDB9D103097B51792648254770D88E292592CC06C36D22C3E502F790050B8ADBB035C89F59FB8A7
  </pre>
	<HR COLOR="003399"> 
<!-- End Content -->
  </BODY>
</HTML>
